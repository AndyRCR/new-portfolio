/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 room.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
	const { nodes, materials } = useGLTF('/room.glb')
	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.SillaAsiento001.geometry}
				material={nodes.SillaAsiento001.material}
				position={[-1.2, 0.56, -0.84]}
				rotation={[-Math.PI, 0.98, -Math.PI]}
			/>
			<mesh
				geometry={nodes.SillaEstructura001.geometry}
				material={nodes.SillaEstructura001.material}
				position={[-1.36, 0.8, -0.75]}
				rotation={[-Math.PI, 0.98, -Math.PI]}
			/>
			<mesh
				geometry={nodes.SillaEspaldar001.geometry}
				material={nodes.SillaEspaldar001.material}
				position={[-1.34, 0.8, -0.76]}
				rotation={[-Math.PI, 0.98, -Math.PI]}
			/>
			<mesh
				geometry={nodes.teeth001.geometry}
				material={nodes.teeth001.material}
				position={[-0.06, 1.02, -1.33]}
				rotation={[-0.17, 0, 0]}
			/>
			<mesh
				geometry={nodes.mouth001.geometry}
				material={nodes.mouth001.material}
				position={[-0.06, 1.02, -1.35]}
				rotation={[-0.17, 0, 0]}
			/>
			<mesh
				geometry={nodes.room.geometry}
				material={nodes.room.material}
				position={[0.79, 0.82, -1.41]}
				rotation={[0, 1.57, 0]}
			/>
			<mesh
				geometry={nodes.vidrioEntorno.geometry}
				material={nodes.vidrioEntorno.material}
				position={[-1.86, 1.81, 0.09]}
			/>
			<mesh
				geometry={nodes.piso.geometry}
				material={nodes.piso.material}
				position={[0.08, 0, 0.08]}
				rotation={[Math.PI, 0, Math.PI]}
			/>
			<mesh
				geometry={nodes.venom.geometry}
				material={nodes.venom.material}
				position={[-0.06, 1.04, -1.38]}
				rotation={[-0.17, 0, 0]}
			/>
			<mesh
				geometry={nodes.vidrioCPU.geometry}
				material={nodes.vidrioCPU.material}
				position={[-0.53, 0.97, -1.49]}
			/>
			<mesh
				geometry={nodes.monitorInteractivo.geometry}
				material={nodes.monitorInteractivo.material}
				position={[-1.18, 1.07, -1.37]}
			/>
			<mesh
				geometry={nodes.cortinon.geometry}
				material={nodes.cortinon.material}
				position={[-1.71, 1.55, 0.09]}
				rotation={[0, 0, -1.52]}
			/>
			<mesh
				geometry={nodes.ledFrontal.geometry}
				material={nodes.ledFrontal.material}
				position={[-0.62, 0.8, -1.21]}
			/>
			<mesh
				geometry={nodes.luzTeclas.geometry}
				material={nodes.luzTeclas.material}
				position={[-1.2, 0.93, -1.3]}
				rotation={[-Math.PI / 2, 0, -Math.PI]}
			/>
			<mesh
				geometry={nodes.aroTrasero.geometry}
				material={nodes.aroTrasero.material}
				position={[-0.55, 0.85, -1.67]}
			/>
			<mesh
				geometry={nodes.aroSuperior2.geometry}
				material={nodes.aroSuperior2.material}
				position={[-0.54, 0.96, -1.4]}
			/>
			<mesh
				geometry={nodes.aroSuperior1.geometry}
				material={nodes.aroSuperior1.material}
				position={[-0.54, 0.96, -1.54]}
			/>
			<mesh
				geometry={nodes.aroFrontal3.geometry}
				material={nodes.aroFrontal3.material}
				position={[-0.52, 0.58, -1.23]}
			/>
			<mesh
				geometry={nodes.aroFrontal2.geometry}
				material={nodes.aroFrontal2.material}
				position={[-0.52, 0.71, -1.23]}
			/>
			<mesh
				geometry={nodes.aroFrontal1.geometry}
				material={nodes.aroFrontal1.material}
				position={[-0.52, 0.84, -1.23]}
			/>
		</group>
	)
}

useGLTF.preload('/room.glb')
